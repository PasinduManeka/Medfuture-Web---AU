<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="8" passed="7" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2025-02-26T08:31:57 IST" name="Default suite" finished-at="2025-02-26T08:38:39 IST" duration-ms="402088">
    <groups>
    </groups>
    <test started-at="2025-02-26T08:31:57 IST" name="Default test" finished-at="2025-02-26T08:38:39 IST" duration-ms="402088">
      <class name="test.TestSIMGPage">
        <test-method is-config="true" signature="setUp()[pri:0, instance:test.TestSIMGPage@37ceb1df]" started-at="2025-02-26T08:31:57 IST" name="setUp" finished-at="2025-02-26T08:32:01 IST" duration-ms="3394" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testSuccessfulFormSubmission()[pri:1, instance:test.TestSIMGPage@37ceb1df]" started-at="2025-02-26T08:32:01 IST" name="testSuccessfulFormSubmission" finished-at="2025-02-26T08:33:13 IST" duration-ms="72116" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSuccessfulFormSubmission -->
        <test-method is-config="true" signature="AfterMethod()[pri:0, instance:test.TestSIMGPage@37ceb1df]" started-at="2025-02-26T08:33:13 IST" name="AfterMethod" finished-at="2025-02-26T08:33:13 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method signature="testemptyFormSubmission()[pri:2, instance:test.TestSIMGPage@37ceb1df]" started-at="2025-02-26T08:33:13 IST" name="testemptyFormSubmission" finished-at="2025-02-26T08:33:44 IST" duration-ms="31216" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testemptyFormSubmission -->
        <test-method is-config="true" signature="AfterMethod()[pri:0, instance:test.TestSIMGPage@37ceb1df]" started-at="2025-02-26T08:33:44 IST" name="AfterMethod" finished-at="2025-02-26T08:33:44 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method signature="testValidEmail()[pri:3, instance:test.TestSIMGPage@37ceb1df]" started-at="2025-02-26T08:33:44 IST" name="testValidEmail" finished-at="2025-02-26T08:34:25 IST" duration-ms="40630" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testValidEmail -->
        <test-method is-config="true" signature="AfterMethod()[pri:0, instance:test.TestSIMGPage@37ceb1df]" started-at="2025-02-26T08:34:25 IST" name="AfterMethod" finished-at="2025-02-26T08:34:25 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method signature="testValidMobile()[pri:4, instance:test.TestSIMGPage@37ceb1df]" started-at="2025-02-26T08:34:25 IST" name="testValidMobile" finished-at="2025-02-26T08:35:04 IST" duration-ms="39351" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testValidMobile -->
        <test-method is-config="true" signature="AfterMethod()[pri:0, instance:test.TestSIMGPage@37ceb1df]" started-at="2025-02-26T08:35:04 IST" name="AfterMethod" finished-at="2025-02-26T08:35:04 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method signature="testValidFileSize()[pri:5, instance:test.TestSIMGPage@37ceb1df]" started-at="2025-02-26T08:35:04 IST" name="testValidFileSize" finished-at="2025-02-26T08:35:13 IST" duration-ms="9387" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Invalid file size does not detect. expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Invalid file size does not detect. expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1578)
at org.testng.Assert.assertTrue(Assert.java:57)
at test.TestSIMGPage.testValidFileSize(TestSIMGPage.java:194)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:686)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)
at org.testng.TestRunner.privateRun(TestRunner.java:739)
at org.testng.TestRunner.run(TestRunner.java:614)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testValidFileSize -->
        <test-method signature="testRequiredFieldValidation()[pri:6, instance:test.TestSIMGPage@37ceb1df]" started-at="2025-02-26T08:35:13 IST" name="testRequiredFieldValidation" finished-at="2025-02-26T08:36:21 IST" duration-ms="67250" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRequiredFieldValidation -->
        <test-method is-config="true" signature="AfterMethod()[pri:0, instance:test.TestSIMGPage@37ceb1df]" started-at="2025-02-26T08:35:13 IST" name="AfterMethod" finished-at="2025-02-26T08:35:13 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method is-config="true" signature="AfterMethod()[pri:0, instance:test.TestSIMGPage@37ceb1df]" started-at="2025-02-26T08:36:21 IST" name="AfterMethod" finished-at="2025-02-26T08:36:21 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method signature="testCVFieldRequiredValidation()[pri:7, instance:test.TestSIMGPage@37ceb1df]" started-at="2025-02-26T08:36:21 IST" name="testCVFieldRequiredValidation" finished-at="2025-02-26T08:37:28 IST" duration-ms="67653" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCVFieldRequiredValidation -->
        <test-method signature="testFileTypeValidation()[pri:8, instance:test.TestSIMGPage@37ceb1df]" started-at="2025-02-26T08:37:28 IST" name="testFileTypeValidation" finished-at="2025-02-26T08:38:37 IST" duration-ms="68341" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFileTypeValidation -->
        <test-method is-config="true" signature="AfterMethod()[pri:0, instance:test.TestSIMGPage@37ceb1df]" started-at="2025-02-26T08:37:28 IST" name="AfterMethod" finished-at="2025-02-26T08:37:28 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method is-config="true" signature="AfterMethod()[pri:0, instance:test.TestSIMGPage@37ceb1df]" started-at="2025-02-26T08:38:37 IST" name="AfterMethod" finished-at="2025-02-26T08:38:37 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:test.TestSIMGPage@37ceb1df]" started-at="2025-02-26T08:38:37 IST" name="tearDown" finished-at="2025-02-26T08:38:39 IST" duration-ms="2703" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- test.TestSIMGPage -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
