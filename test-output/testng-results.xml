<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="42" passed="37" failed="5" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2024-12-23T09:01:30 IST" name="Default suite" finished-at="2024-12-23T09:30:28 IST" duration-ms="1738055">
    <groups>
    </groups>
    <test started-at="2024-12-23T09:01:30 IST" name="Default test" finished-at="2024-12-23T09:30:28 IST" duration-ms="1738055">
      <class name="test.TestContactEnquiry">
        <test-method is-config="true" signature="setUp()[pri:0, instance:test.TestContactEnquiry@bccb269]" started-at="2024-12-23T09:01:30 IST" name="setUp" finished-at="2024-12-23T09:01:36 IST" duration-ms="5393" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="successfulIsFormSubmission()[pri:1, instance:test.TestContactEnquiry@bccb269]" started-at="2024-12-23T09:01:55 IST" name="successfulIsFormSubmission" finished-at="2024-12-23T09:02:46 IST" duration-ms="51079" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- successfulIsFormSubmission -->
        <test-method is-config="true" signature="AfterMethod()[pri:0, instance:test.TestContactEnquiry@bccb269]" started-at="2024-12-23T09:02:46 IST" name="AfterMethod" finished-at="2024-12-23T09:02:46 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method signature="testEmptyForm()[pri:2, instance:test.TestContactEnquiry@bccb269]" started-at="2024-12-23T09:02:46 IST" name="testEmptyForm" finished-at="2024-12-23T09:02:57 IST" duration-ms="11214" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testEmptyForm -->
        <test-method is-config="true" signature="AfterMethod()[pri:0, instance:test.TestContactEnquiry@bccb269]" started-at="2024-12-23T09:02:57 IST" name="AfterMethod" finished-at="2024-12-23T09:02:57 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method signature="testValidMobileNum()[pri:3, instance:test.TestContactEnquiry@bccb269]" started-at="2024-12-23T09:02:57 IST" name="testValidMobileNum" finished-at="2024-12-23T09:03:41 IST" duration-ms="43522" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testValidMobileNum -->
        <test-method is-config="true" signature="AfterMethod()[pri:0, instance:test.TestContactEnquiry@bccb269]" started-at="2024-12-23T09:03:41 IST" name="AfterMethod" finished-at="2024-12-23T09:03:41 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method signature="testValidEmail()[pri:4, instance:test.TestContactEnquiry@bccb269]" started-at="2024-12-23T09:03:41 IST" name="testValidEmail" finished-at="2024-12-23T09:04:24 IST" duration-ms="43502" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testValidEmail -->
        <test-method is-config="true" signature="AfterMethod()[pri:0, instance:test.TestContactEnquiry@bccb269]" started-at="2024-12-23T09:04:24 IST" name="AfterMethod" finished-at="2024-12-23T09:04:24 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:test.TestContactEnquiry@bccb269]" started-at="2024-12-23T09:04:24 IST" name="tearDown" finished-at="2024-12-23T09:04:28 IST" duration-ms="3073" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- test.TestContactEnquiry -->
      <class name="test.TestLandingPage">
        <test-method is-config="true" signature="setUp()[pri:0, instance:test.TestLandingPage@3c3d9b6b]" started-at="2024-12-23T09:01:38 IST" name="setUp" finished-at="2024-12-23T09:01:41 IST" duration-ms="2579" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testSuccessfulFormSubmission()[pri:1, instance:test.TestLandingPage@3c3d9b6b]" started-at="2024-12-23T09:04:28 IST" name="testSuccessfulFormSubmission" finished-at="2024-12-23T09:05:43 IST" duration-ms="75484" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSuccessfulFormSubmission -->
        <test-method is-config="true" signature="AfterMethod()[pri:0, instance:test.TestLandingPage@3c3d9b6b]" started-at="2024-12-23T09:05:43 IST" name="AfterMethod" finished-at="2024-12-23T09:05:43 IST" duration-ms="5" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method signature="testEmptyFormSubmission()[pri:2, instance:test.TestLandingPage@3c3d9b6b]" started-at="2024-12-23T09:05:43 IST" name="testEmptyFormSubmission" finished-at="2024-12-23T09:06:14 IST" duration-ms="31050" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testEmptyFormSubmission -->
        <test-method signature="testValidEmail()[pri:3, instance:test.TestLandingPage@3c3d9b6b]" started-at="2024-12-23T09:06:14 IST" name="testValidEmail" finished-at="2024-12-23T09:07:20 IST" duration-ms="65987" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testValidEmail -->
        <test-method is-config="true" signature="AfterMethod()[pri:0, instance:test.TestLandingPage@3c3d9b6b]" started-at="2024-12-23T09:06:14 IST" name="AfterMethod" finished-at="2024-12-23T09:06:14 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method is-config="true" signature="AfterMethod()[pri:0, instance:test.TestLandingPage@3c3d9b6b]" started-at="2024-12-23T09:07:20 IST" name="AfterMethod" finished-at="2024-12-23T09:07:20 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method signature="testValidMobile()[pri:4, instance:test.TestLandingPage@3c3d9b6b]" started-at="2024-12-23T09:07:20 IST" name="testValidMobile" finished-at="2024-12-23T09:08:26 IST" duration-ms="65930" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testValidMobile -->
        <test-method signature="isValidFileSize()[pri:5, instance:test.TestLandingPage@3c3d9b6b]" started-at="2024-12-23T09:08:26 IST" name="isValidFileSize" finished-at="2024-12-23T09:09:31 IST" duration-ms="65154" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isValidFileSize -->
        <test-method is-config="true" signature="AfterMethod()[pri:0, instance:test.TestLandingPage@3c3d9b6b]" started-at="2024-12-23T09:08:26 IST" name="AfterMethod" finished-at="2024-12-23T09:08:26 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method is-config="true" signature="AfterMethod()[pri:0, instance:test.TestLandingPage@3c3d9b6b]" started-at="2024-12-23T09:09:31 IST" name="AfterMethod" finished-at="2024-12-23T09:09:31 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:test.TestLandingPage@3c3d9b6b]" started-at="2024-12-23T09:09:31 IST" name="tearDown" finished-at="2024-12-23T09:09:34 IST" duration-ms="3203" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- test.TestLandingPage -->
      <class name="test.clientRegTestNG">
        <test-method is-config="true" signature="setUp()[pri:0, instance:test.clientRegTestNG@79d8407f]" started-at="2024-12-23T09:01:52 IST" name="setUp" finished-at="2024-12-23T09:01:55 IST" duration-ms="2748" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="successfulFormSubmission()[pri:1, instance:test.clientRegTestNG@79d8407f]" started-at="2024-12-23T09:09:34 IST" name="successfulFormSubmission" finished-at="2024-12-23T09:10:23 IST" duration-ms="49131" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- successfulFormSubmission -->
        <test-method is-config="true" signature="AfterMethod()[pri:0, instance:test.clientRegTestNG@79d8407f]" started-at="2024-12-23T09:10:23 IST" name="AfterMethod" finished-at="2024-12-23T09:10:24 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method signature="testEmptyFormSubmission()[pri:2, instance:test.clientRegTestNG@79d8407f]" started-at="2024-12-23T09:10:24 IST" name="testEmptyFormSubmission" finished-at="2024-12-23T09:10:28 IST" duration-ms="4021" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testEmptyFormSubmission -->
        <test-method signature="testExistEmailValidation()[pri:3, instance:test.clientRegTestNG@79d8407f]" started-at="2024-12-23T09:10:28 IST" name="testExistEmailValidation" finished-at="2024-12-23T09:11:13 IST" duration-ms="45826" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testExistEmailValidation -->
        <test-method is-config="true" signature="AfterMethod()[pri:0, instance:test.clientRegTestNG@79d8407f]" started-at="2024-12-23T09:10:28 IST" name="AfterMethod" finished-at="2024-12-23T09:10:28 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method signature="testPasswordLength()[pri:4, instance:test.clientRegTestNG@79d8407f]" started-at="2024-12-23T09:11:13 IST" name="testPasswordLength" finished-at="2024-12-23T09:11:59 IST" duration-ms="45510" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPasswordLength -->
        <test-method is-config="true" signature="AfterMethod()[pri:0, instance:test.clientRegTestNG@79d8407f]" started-at="2024-12-23T09:11:13 IST" name="AfterMethod" finished-at="2024-12-23T09:11:13 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method signature="testPasswordMatch()[pri:5, instance:test.clientRegTestNG@79d8407f]" started-at="2024-12-23T09:11:59 IST" name="testPasswordMatch" finished-at="2024-12-23T09:12:46 IST" duration-ms="46949" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPasswordMatch -->
        <test-method is-config="true" signature="AfterMethod()[pri:0, instance:test.clientRegTestNG@79d8407f]" started-at="2024-12-23T09:11:59 IST" name="AfterMethod" finished-at="2024-12-23T09:11:59 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method signature="testValidEmail()[pri:6, instance:test.clientRegTestNG@79d8407f]" started-at="2024-12-23T09:12:46 IST" name="testValidEmail" finished-at="2024-12-23T09:13:31 IST" duration-ms="45416" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testValidEmail -->
        <test-method is-config="true" signature="AfterMethod()[pri:0, instance:test.clientRegTestNG@79d8407f]" started-at="2024-12-23T09:12:46 IST" name="AfterMethod" finished-at="2024-12-23T09:12:46 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method signature="testValidWebURL()[pri:7, instance:test.clientRegTestNG@79d8407f]" started-at="2024-12-23T09:13:31 IST" name="testValidWebURL" finished-at="2024-12-23T09:14:17 IST" duration-ms="45519" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testValidWebURL -->
        <test-method is-config="true" signature="AfterMethod()[pri:0, instance:test.clientRegTestNG@79d8407f]" started-at="2024-12-23T09:13:31 IST" name="AfterMethod" finished-at="2024-12-23T09:13:31 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method is-config="true" signature="AfterMethod()[pri:0, instance:test.clientRegTestNG@79d8407f]" started-at="2024-12-23T09:14:17 IST" name="AfterMethod" finished-at="2024-12-23T09:14:17 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:test.clientRegTestNG@79d8407f]" started-at="2024-12-23T09:14:17 IST" name="tearDown" finished-at="2024-12-23T09:14:20 IST" duration-ms="3115" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- test.clientRegTestNG -->
      <class name="test.TestNG">
        <test-method is-config="true" signature="setUp()[pri:0, instance:test.TestNG@4e50c791]" started-at="2024-12-23T09:01:41 IST" name="setUp" finished-at="2024-12-23T09:01:44 IST" duration-ms="2784" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="successfulFormSubmission()[pri:1, instance:test.TestNG@4e50c791]" started-at="2024-12-23T09:19:41 IST" name="successfulFormSubmission" finished-at="2024-12-23T09:20:33 IST" duration-ms="52191" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- successfulFormSubmission -->
        <test-method is-config="true" signature="AfterMethod()[pri:0, instance:test.TestNG@4e50c791]" started-at="2024-12-23T09:20:33 IST" name="AfterMethod" finished-at="2024-12-23T09:20:33 IST" duration-ms="4" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method signature="testEmptyFormSubmission()[pri:2, instance:test.TestNG@4e50c791]" started-at="2024-12-23T09:20:33 IST" name="testEmptyFormSubmission" finished-at="2024-12-23T09:21:17 IST" duration-ms="43383" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testEmptyFormSubmission -->
        <test-method is-config="true" signature="AfterMethod()[pri:0, instance:test.TestNG@4e50c791]" started-at="2024-12-23T09:21:17 IST" name="AfterMethod" finished-at="2024-12-23T09:21:17 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method signature="testAlreadyTakenUserRegistration()[pri:3, instance:test.TestNG@4e50c791]" started-at="2024-12-23T09:21:17 IST" name="testAlreadyTakenUserRegistration" finished-at="2024-12-23T09:22:04 IST" duration-ms="47667" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAlreadyTakenUserRegistration -->
        <test-method is-config="true" signature="AfterMethod()[pri:0, instance:test.TestNG@4e50c791]" started-at="2024-12-23T09:22:04 IST" name="AfterMethod" finished-at="2024-12-23T09:22:04 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method signature="tesPasswordLenghtError()[pri:4, instance:test.TestNG@4e50c791]" started-at="2024-12-23T09:22:04 IST" name="tesPasswordLenghtError" finished-at="2024-12-23T09:22:52 IST" duration-ms="47223" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tesPasswordLenghtError -->
        <test-method is-config="true" signature="AfterMethod()[pri:0, instance:test.TestNG@4e50c791]" started-at="2024-12-23T09:22:52 IST" name="AfterMethod" finished-at="2024-12-23T09:22:52 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method signature="testPasswordMismatchErrorDisplayed()[pri:5, instance:test.TestNG@4e50c791]" started-at="2024-12-23T09:22:52 IST" name="testPasswordMismatchErrorDisplayed" finished-at="2024-12-23T09:23:40 IST" duration-ms="48447" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPasswordMismatchErrorDisplayed -->
        <test-method is-config="true" signature="AfterMethod()[pri:0, instance:test.TestNG@4e50c791]" started-at="2024-12-23T09:23:40 IST" name="AfterMethod" finished-at="2024-12-23T09:23:40 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method signature="testValidEmail()[pri:6, instance:test.TestNG@4e50c791]" started-at="2024-12-23T09:23:40 IST" name="testValidEmail" finished-at="2024-12-23T09:24:27 IST" duration-ms="47246" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testValidEmail -->
        <test-method is-config="true" signature="AfterMethod()[pri:0, instance:test.TestNG@4e50c791]" started-at="2024-12-23T09:24:27 IST" name="AfterMethod" finished-at="2024-12-23T09:24:27 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method signature="testValidFileSize()[pri:7, instance:test.TestNG@4e50c791]" started-at="2024-12-23T09:24:27 IST" name="testValidFileSize" finished-at="2024-12-23T09:25:16 IST" duration-ms="48323" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testValidFileSize -->
        <test-method is-config="true" signature="AfterMethod()[pri:0, instance:test.TestNG@4e50c791]" started-at="2024-12-23T09:25:16 IST" name="AfterMethod" finished-at="2024-12-23T09:25:16 IST" duration-ms="4" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:test.TestNG@4e50c791]" started-at="2024-12-23T09:25:16 IST" name="tearDown" finished-at="2024-12-23T09:25:18 IST" duration-ms="2859" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- test.TestNG -->
      <class name="test.TestQuickApply">
        <test-method is-config="true" signature="setUp()[pri:0, instance:test.TestQuickApply@1e66f1f5]" started-at="2024-12-23T09:01:47 IST" name="setUp" finished-at="2024-12-23T09:01:49 IST" duration-ms="2882" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="successfulFormSubmission()[pri:1, instance:test.TestQuickApply@1e66f1f5]" started-at="2024-12-23T09:17:32 IST" name="successfulFormSubmission" finished-at="2024-12-23T09:18:13 IST" duration-ms="40864" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- successfulFormSubmission -->
        <test-method signature="testEmptyFormSubmission()[pri:2, instance:test.TestQuickApply@1e66f1f5]" started-at="2024-12-23T09:18:13 IST" name="testEmptyFormSubmission" finished-at="2024-12-23T09:18:36 IST" duration-ms="23209" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testEmptyFormSubmission -->
        <test-method is-config="true" signature="AfterMethod()[pri:0, instance:test.TestQuickApply@1e66f1f5]" started-at="2024-12-23T09:18:13 IST" name="AfterMethod" finished-at="2024-12-23T09:18:13 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method signature="testEmailValidations()[pri:3, instance:test.TestQuickApply@1e66f1f5]" started-at="2024-12-23T09:18:36 IST" name="testEmailValidations" finished-at="2024-12-23T09:19:02 IST" duration-ms="26200" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testEmailValidations -->
        <test-method is-config="true" signature="AfterMethod()[pri:0, instance:test.TestQuickApply@1e66f1f5]" started-at="2024-12-23T09:18:36 IST" name="AfterMethod" finished-at="2024-12-23T09:18:36 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method is-config="true" signature="AfterMethod()[pri:0, instance:test.TestQuickApply@1e66f1f5]" started-at="2024-12-23T09:19:02 IST" name="AfterMethod" finished-at="2024-12-23T09:19:02 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method signature="testMobileValidation()[pri:4, instance:test.TestQuickApply@1e66f1f5]" started-at="2024-12-23T09:19:02 IST" name="testMobileValidation" finished-at="2024-12-23T09:19:38 IST" duration-ms="35813" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMobileValidation -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:test.TestQuickApply@1e66f1f5]" started-at="2024-12-23T09:19:38 IST" name="tearDown" finished-at="2024-12-23T09:19:41 IST" duration-ms="3093" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="AfterMethod()[pri:0, instance:test.TestQuickApply@1e66f1f5]" started-at="2024-12-23T09:19:38 IST" name="AfterMethod" finished-at="2024-12-23T09:19:38 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
      </class> <!-- test.TestQuickApply -->
      <class name="test.TestSIMGPage">
        <test-method is-config="true" signature="setUp()[pri:0, instance:test.TestSIMGPage@5fbe4146]" started-at="2024-12-23T09:01:49 IST" name="setUp" finished-at="2024-12-23T09:01:52 IST" duration-ms="2885" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testSuccessfulFormSubmission()[pri:1, instance:test.TestSIMGPage@5fbe4146]" started-at="2024-12-23T09:14:20 IST" name="testSuccessfulFormSubmission" finished-at="2024-12-23T09:15:31 IST" duration-ms="71319" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSuccessfulFormSubmission -->
        <test-method signature="testemptyFormSubmission()[pri:2, instance:test.TestSIMGPage@5fbe4146]" started-at="2024-12-23T09:15:31 IST" name="testemptyFormSubmission" finished-at="2024-12-23T09:16:02 IST" duration-ms="31176" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testemptyFormSubmission -->
        <test-method is-config="true" signature="AfterMethod()[pri:0, instance:test.TestSIMGPage@5fbe4146]" started-at="2024-12-23T09:15:31 IST" name="AfterMethod" finished-at="2024-12-23T09:15:31 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method signature="testValidEmail()[pri:3, instance:test.TestSIMGPage@5fbe4146]" started-at="2024-12-23T09:16:02 IST" name="testValidEmail" finished-at="2024-12-23T09:16:41 IST" duration-ms="38732" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testValidEmail -->
        <test-method is-config="true" signature="AfterMethod()[pri:0, instance:test.TestSIMGPage@5fbe4146]" started-at="2024-12-23T09:16:02 IST" name="AfterMethod" finished-at="2024-12-23T09:16:02 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method signature="testValidMobile()[pri:4, instance:test.TestSIMGPage@5fbe4146]" started-at="2024-12-23T09:16:41 IST" name="testValidMobile" finished-at="2024-12-23T09:17:20 IST" duration-ms="39056" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testValidMobile -->
        <test-method is-config="true" signature="AfterMethod()[pri:0, instance:test.TestSIMGPage@5fbe4146]" started-at="2024-12-23T09:16:41 IST" name="AfterMethod" finished-at="2024-12-23T09:16:41 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method signature="testValidFileSize()[pri:5, instance:test.TestSIMGPage@5fbe4146]" started-at="2024-12-23T09:17:20 IST" name="testValidFileSize" finished-at="2024-12-23T09:17:29 IST" duration-ms="8454" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Invalid file size does not detect. expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Invalid file size does not detect. expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1578)
at org.testng.Assert.assertTrue(Assert.java:57)
at test.TestSIMGPage.testValidFileSize(TestSIMGPage.java:189)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:686)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)
at org.testng.TestRunner.privateRun(TestRunner.java:739)
at org.testng.TestRunner.run(TestRunner.java:614)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testValidFileSize -->
        <test-method is-config="true" signature="AfterMethod()[pri:0, instance:test.TestSIMGPage@5fbe4146]" started-at="2024-12-23T09:17:20 IST" name="AfterMethod" finished-at="2024-12-23T09:17:20 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:test.TestSIMGPage@5fbe4146]" started-at="2024-12-23T09:17:29 IST" name="tearDown" finished-at="2024-12-23T09:17:32 IST" duration-ms="3220" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="AfterMethod()[pri:0, instance:test.TestSIMGPage@5fbe4146]" started-at="2024-12-23T09:17:29 IST" name="AfterMethod" finished-at="2024-12-23T09:17:29 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
      </class> <!-- test.TestSIMGPage -->
      <class name="test.TestEmployeePage">
        <test-method is-config="true" signature="setUp()[pri:0, instance:test.TestEmployeePage@7530ad9c]" started-at="2024-12-23T09:01:36 IST" name="setUp" finished-at="2024-12-23T09:01:38 IST" duration-ms="2729" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testFilSizeValidation()[pri:1, instance:test.TestEmployeePage@7530ad9c]" started-at="2024-12-23T09:25:18 IST" name="testFilSizeValidation" finished-at="2024-12-23T09:25:26 IST" duration-ms="7694" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[File size has not been validated.]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: File size has not been validated.
at org.junit.Assert.fail(Assert.java:89)
at org.junit.Assert.assertTrue(Assert.java:42)
at test.TestEmployeePage.testFilSizeValidation(TestEmployeePage.java:150)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:686)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)
at org.testng.TestRunner.privateRun(TestRunner.java:739)
at org.testng.TestRunner.run(TestRunner.java:614)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFilSizeValidation -->
        <test-method is-config="true" signature="AfterMethod()[pri:0, instance:test.TestEmployeePage@7530ad9c]" started-at="2024-12-23T09:25:26 IST" name="AfterMethod" finished-at="2024-12-23T09:25:26 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method signature="testSuccessfulFormSubmission()[pri:1, instance:test.TestEmployeePage@7530ad9c]" started-at="2024-12-23T09:25:26 IST" name="testSuccessfulFormSubmission" finished-at="2024-12-23T09:25:37 IST" duration-ms="10781" status="FAIL">
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[Unable to locate element: div.relative.bg-white.p-7.lg\:p-10.rounded-lg.flex.flex-col.items-center.text-center
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.25.0', revision: '8a8aea2337'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '23.0.1'
Driver info: org.openqa.selenium.firefox.FirefoxDriver
Command: [501011fc-0b19-4339-a54c-a66d30de1a48, findElement {value=div.relative.bg-white.p-7.lg\:p-10.rounded-lg.flex.flex-col.items-center.text-center, using=css selector}]
Capabilities {acceptInsecureCerts: true, browserName: firefox, browserVersion: 133.0.3, moz:accessibilityChecks: false, moz:buildID: 20241209150345, moz:debuggerAddress: 127.0.0.1:5303, moz:geckodriverVersion: 0.35.0, moz:headless: false, moz:platformVersion: 10.0, moz:processID: 50052, moz:profile: C:\Users\QACODE~1\AppData\L..., moz:shutdownTimeout: 60000, moz:webdriverClick: true, moz:windowless: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(manual, http=desktop-..., se:cdp: ws://127.0.0.1:5303/devtool..., se:cdpVersion: 85.0, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, userAgent: Mozilla/5.0 (Windows NT 10....}
Session ID: 501011fc-0b19-4339-a54c-a66d30de1a48]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: Unable to locate element: div.relative.bg-white.p-7.lg\:p-10.rounded-lg.flex.flex-col.items-center.text-center
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.25.0', revision: '8a8aea2337'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '23.0.1'
Driver info: org.openqa.selenium.firefox.FirefoxDriver
Command: [501011fc-0b19-4339-a54c-a66d30de1a48, findElement {value=div.relative.bg-white.p-7.lg\:p-10.rounded-lg.flex.flex-col.items-center.text-center, using=css selector}]
Capabilities {acceptInsecureCerts: true, browserName: firefox, browserVersion: 133.0.3, moz:accessibilityChecks: false, moz:buildID: 20241209150345, moz:debuggerAddress: 127.0.0.1:5303, moz:geckodriverVersion: 0.35.0, moz:headless: false, moz:platformVersion: 10.0, moz:processID: 50052, moz:profile: C:\Users\QACODE~1\AppData\L..., moz:shutdownTimeout: 60000, moz:webdriverClick: true, moz:windowless: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(manual, http=desktop-..., se:cdp: ws://127.0.0.1:5303/devtool..., se:cdpVersion: 85.0, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, userAgent: Mozilla/5.0 (Windows NT 10....}
Session ID: 501011fc-0b19-4339-a54c-a66d30de1a48
at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:62)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:501)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:485)
at org.openqa.selenium.remote.ErrorCodec.decode(ErrorCodec.java:167)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:138)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:50)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:190)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:216)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:174)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:545)
at org.openqa.selenium.remote.ElementLocation$ElementFinder$2.findElement(ElementLocation.java:165)
at org.openqa.selenium.remote.ElementLocation.findElement(ElementLocation.java:59)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:368)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:362)
at Pages.EmployeePagereachUs.findSuccessfulPopup(EmployeePagereachUs.java:136)
at test.TestEmployeePage.testSuccessfulFormSubmission(TestEmployeePage.java:76)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:686)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)
at org.testng.TestRunner.privateRun(TestRunner.java:739)
at org.testng.TestRunner.run(TestRunner.java:614)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSuccessfulFormSubmission -->
        <test-method is-config="true" signature="AfterMethod()[pri:0, instance:test.TestEmployeePage@7530ad9c]" started-at="2024-12-23T09:25:37 IST" name="AfterMethod" finished-at="2024-12-23T09:25:37 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method signature="testEmptyForm()[pri:2, instance:test.TestEmployeePage@7530ad9c]" started-at="2024-12-23T09:25:37 IST" name="testEmptyForm" finished-at="2024-12-23T09:27:21 IST" duration-ms="104299" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testEmptyForm -->
        <test-method is-config="true" signature="AfterMethod()[pri:0, instance:test.TestEmployeePage@7530ad9c]" started-at="2024-12-23T09:27:21 IST" name="AfterMethod" finished-at="2024-12-23T09:27:21 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method signature="testValidEmail()[pri:3, instance:test.TestEmployeePage@7530ad9c]" started-at="2024-12-23T09:27:21 IST" name="testValidEmail" finished-at="2024-12-23T09:27:27 IST" duration-ms="5643" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testValidEmail -->
        <test-method is-config="true" signature="AfterMethod()[pri:0, instance:test.TestEmployeePage@7530ad9c]" started-at="2024-12-23T09:27:27 IST" name="AfterMethod" finished-at="2024-12-23T09:27:27 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method signature="testValidmobileNumber()[pri:4, instance:test.TestEmployeePage@7530ad9c]" started-at="2024-12-23T09:27:27 IST" name="testValidmobileNumber" finished-at="2024-12-23T09:27:33 IST" duration-ms="6026" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Invalie mobile validation message does not display.]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Invalie mobile validation message does not display.
at org.junit.Assert.fail(Assert.java:89)
at org.junit.Assert.assertTrue(Assert.java:42)
at test.TestEmployeePage.testValidmobileNumber(TestEmployeePage.java:133)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:686)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)
at org.testng.TestRunner.privateRun(TestRunner.java:739)
at org.testng.TestRunner.run(TestRunner.java:614)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testValidmobileNumber -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:test.TestEmployeePage@7530ad9c]" started-at="2024-12-23T09:27:33 IST" name="tearDown" finished-at="2024-12-23T09:27:36 IST" duration-ms="2860" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="AfterMethod()[pri:0, instance:test.TestEmployeePage@7530ad9c]" started-at="2024-12-23T09:27:33 IST" name="AfterMethod" finished-at="2024-12-23T09:27:33 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
      </class> <!-- test.TestEmployeePage -->
      <class name="test.TestProductPage">
        <test-method is-config="true" signature="setUp()[pri:0, instance:test.TestProductPage@58a9760d]" started-at="2024-12-23T09:01:44 IST" name="setUp" finished-at="2024-12-23T09:01:47 IST" duration-ms="2739" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testSuccessfulFormSubmission()[pri:1, instance:test.TestProductPage@58a9760d]" started-at="2024-12-23T09:27:36 IST" name="testSuccessfulFormSubmission" finished-at="2024-12-23T09:28:45 IST" duration-ms="69635" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSuccessfulFormSubmission -->
        <test-method is-config="true" signature="AfterMethod()[pri:0, instance:test.TestProductPage@58a9760d]" started-at="2024-12-23T09:28:45 IST" name="AfterMethod" finished-at="2024-12-23T09:28:45 IST" duration-ms="4" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method signature="testemptyFormSubmission()[pri:2, instance:test.TestProductPage@58a9760d]" started-at="2024-12-23T09:28:45 IST" name="testemptyFormSubmission" finished-at="2024-12-23T09:29:16 IST" duration-ms="31073" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testemptyFormSubmission -->
        <test-method is-config="true" signature="AfterMethod()[pri:0, instance:test.TestProductPage@58a9760d]" started-at="2024-12-23T09:29:16 IST" name="AfterMethod" finished-at="2024-12-23T09:29:16 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method signature="testValidEmail()[pri:3, instance:test.TestProductPage@58a9760d]" started-at="2024-12-23T09:29:16 IST" name="testValidEmail" finished-at="2024-12-23T09:29:48 IST" duration-ms="31322" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testValidEmail -->
        <test-method is-config="true" signature="AfterMethod()[pri:0, instance:test.TestProductPage@58a9760d]" started-at="2024-12-23T09:29:48 IST" name="AfterMethod" finished-at="2024-12-23T09:29:48 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method signature="testValidMobile()[pri:4, instance:test.TestProductPage@58a9760d]" started-at="2024-12-23T09:29:48 IST" name="testValidMobile" finished-at="2024-12-23T09:30:19 IST" duration-ms="31702" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testValidMobile -->
        <test-method is-config="true" signature="AfterMethod()[pri:0, instance:test.TestProductPage@58a9760d]" started-at="2024-12-23T09:30:19 IST" name="AfterMethod" finished-at="2024-12-23T09:30:19 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method signature="testValidFileSize()[pri:5, instance:test.TestProductPage@58a9760d]" started-at="2024-12-23T09:30:19 IST" name="testValidFileSize" finished-at="2024-12-23T09:30:26 IST" duration-ms="6026" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Invalid file size does not detect. expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Invalid file size does not detect. expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1578)
at org.testng.Assert.assertTrue(Assert.java:57)
at test.TestProductPage.testValidFileSize(TestProductPage.java:158)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:686)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)
at org.testng.TestRunner.privateRun(TestRunner.java:739)
at org.testng.TestRunner.run(TestRunner.java:614)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testValidFileSize -->
        <test-method is-config="true" signature="AfterMethod()[pri:0, instance:test.TestProductPage@58a9760d]" started-at="2024-12-23T09:30:26 IST" name="AfterMethod" finished-at="2024-12-23T09:30:26 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:test.TestProductPage@58a9760d]" started-at="2024-12-23T09:30:26 IST" name="tearDown" finished-at="2024-12-23T09:30:28 IST" duration-ms="2869" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- test.TestProductPage -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
